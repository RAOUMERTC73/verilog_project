module ALU_5bit_tb;
  logic [4:0] a;
  logic [4:0] b;
  logic [2:0] opcode;
  wire [4:0] result;

  ALU_5bit dut (
    .a(a),
    .b(b),
    .opcode(opcode),
    .result(result)
  );

  initial begin
    // Test Addition
    a = 5'b00010;
    b = 5'b00010;
    opcode = 3'b000;
    #10;

    // Test Subtraction
    a = 5'b00011;
    b = 5'b00001;
    opcode = 3'b001;
    #10;

    // Test Multiplication
    a = 5'b00011;
    b = 5'b00010;
    opcode = 3'b010;
    #10;

    // Test Bitwise AND
    a = 5'b00100;
    b = 5'b00010;
    opcode = 3'b011;
    #10;

    // Test Bitwise OR
    a = 5'b00101;
    b = 5'b00100;
    opcode = 3'b100;
    #10;

    // Test default (no operation)
    a = 5'b01100;
    b = 5'b00110;
    opcode = 3'b111;
    #10;
    
    $finish();
  end

  initial begin
    $dumpfile("dump.vcd");
    $dumpvars(0);
    #200;
    $finish();
  end
  
endmodule
